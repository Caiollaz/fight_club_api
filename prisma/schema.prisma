generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id        String    @id @default(cuid())
  nome      String
  email     String
  senha     String
  clienteId String
  deleted   DateTime?

  cliente Clientes @relation(fields: [clienteId], references: [id])
}

model Clientes {
  id      String    @id @default(cuid())
  nome    String
  cnpj    String
  deleted DateTime?

  usuarios         Usuarios[]
  academia         Academias[]
  CobrancasCliente CobrancasCliente[]
  ClienteModulos   ClienteModulos[]
}

model ClienteModulos {
  id             String    @id @default(cuid())
  clientesId     String
  dataHora       DateTime  @default(now())
  dataVencimento DateTime?

  modulo  CobrancasClienteItemsTipo
  cliente Clientes                  @relation(fields: [clientesId], references: [id])
}

model Academias {
  id        String    @id @default(cuid())
  nome      String
  rua       String
  cidade    String
  estado    String
  cep       String
  numero    String
  clienteId String
  deleted   DateTime?

  cliente          Clientes          @relation(fields: [clienteId], references: [id])
  alunos           Alunos[]
  planos           Planos[]
  modalidades      Modalidades[]
  agendas          Agendas[]
  examesGraduacoes ExamesGraduacao[]
  cobrancas        Cobrancas[]
  professores      Professores[]
}

enum Status {
  ATIVO
  INATIVO
  PENDENTE
  DEVENDO
}

model Alunos {
  id         String    @id @default(cuid())
  dataHora   DateTime  @default(now())
  nome       String
  cpf        String
  rua        String
  cidade     String
  estado     String
  cep        String
  numero     String
  telefone   String
  academiaId String
  planosId   String
  status     Status    @default(ATIVO)
  deleted    DateTime?

  academia              Academias              @relation(fields: [academiaId], references: [id])
  plano                 Planos                 @relation(fields: [planosId], references: [id])
  alunosExamesGraducoes AlunosExamesGraducao[]
  alunosGraducoes       AlunosGraducao[]
  cobrancas             Cobrancas[]
}

model AlunosGraducao {
  id            String    @id @default(cuid())
  alunosId      String
  graduacoesId  String?
  modalidadesId String
  deleted       DateTime?

  graduacao  Graduacoes? @relation(fields: [graduacoesId], references: [id])
  modalidade Modalidades @relation(fields: [modalidadesId], references: [id])
  aluno      Alunos      @relation(fields: [alunosId], references: [id])
}

model Planos {
  id         String    @id @default(cuid())
  dataHora   DateTime  @default(now())
  nome       String
  descricao  String
  valor      String
  academiaId String
  deleted    DateTime?

  academia Academias @relation(fields: [academiaId], references: [id])
  alunos   Alunos[]
}

enum TiposCobrancas {
  MENSALIDADE
}

model Cobrancas {
  id            String         @id @default(cuid())
  dataHora      DateTime       @default(now())
  dataPagamento DateTime?
  vencimento    DateTime
  pago          Boolean        @default(false)
  alunosId      String
  academiasId   String
  valor         Int
  tipo          TiposCobrancas
  deleted       DateTime?

  academia Academias @relation(fields: [academiasId], references: [id])
  aluno    Alunos    @relation(fields: [alunosId], references: [id])
}

model Modalidades {
  id          String    @id @default(cuid())
  dataHora    DateTime  @default(now())
  nome        String
  academiasId String
  deleted     DateTime?

  academia         Academias         @relation(fields: [academiasId], references: [id])
  agendas          Agendas[]
  examesGraduacoes ExamesGraduacao[]
  graduacoes       Graduacoes[]
  alunosGraducoes  AlunosGraducao[]
}

model Graduacoes {
  id            String    @id @default(cuid())
  nome          String
  qtdGraus      Int?
  ordem         Int?      @default(0)
  modalidadesId String
  deleted       DateTime?

  modalidade      Modalidades      @relation(fields: [modalidadesId], references: [id])
  alunosGraducoes AlunosGraducao[]
}

enum Tipo {
  AULA
  EXAME
}

model Agendas {
  id            String    @id @default(cuid())
  tipo          Tipo
  dataHora      DateTime
  dataInicio    DateTime
  dataFinal     DateTime
  modalidadesId String
  academiasId   String
  professorId   String?
  deleted       DateTime?

  academia    Academias    @relation(fields: [academiasId], references: [id])
  modalidade  Modalidades  @relation(fields: [modalidadesId], references: [id])
  professores Professores? @relation(fields: [professorId], references: [id])
}

model ExamesGraduacao {
  id            String    @id @default(cuid())
  modalidadesId String
  academiasId   String
  deleted       DateTime?

  academia              Academias              @relation(fields: [academiasId], references: [id])
  modalidade            Modalidades            @relation(fields: [modalidadesId], references: [id])
  alunosExamesGraducoes AlunosExamesGraducao[]
}

model AlunosExamesGraducao {
  id                String    @id @default(cuid())
  examesGraduacaoId String
  alunosId          String
  aprovado          Boolean
  deleted           DateTime?

  aluno           Alunos          @relation(fields: [alunosId], references: [id])
  examesGraduacao ExamesGraduacao @relation(fields: [examesGraduacaoId], references: [id])
}

enum CobrancasClienteItemsTipo {
  ALUNO
  PLANO
  MODALIDADE
  FINANCEIRO
  MENSALIDADE
  PAGAMENTOS
  CALENDARIO
}

model Precos {
  id        String                    @id @default(cuid())
  dataHora  DateTime                  @default(now())
  valor     Int
  deleted   DateTime?
  titulo    String?
  descricao String?
  modulo    Boolean                   @default(false)
  tipo      CobrancasClienteItemsTipo
}

model CobrancasCliente {
  id            String    @id @default(cuid())
  dataHora      DateTime
  dataPagamento DateTime?
  vencimento    DateTime
  pago          Boolean
  clientesId    String
  deleted       DateTime?

  items   CobrancasClienteItems[]
  cliente Clientes                @relation(fields: [clientesId], references: [id])
}

model CobrancasClienteItems {
  id                 String                    @id @default(cuid())
  dataHora           DateTime
  valor              Int
  cobrancasClienteId String
  qtd                Int
  tipo               CobrancasClienteItemsTipo @default(ALUNO)
  deleted            DateTime?

  CobrancasCliente CobrancasCliente @relation(fields: [cobrancasClienteId], references: [id])
}

model Professores {
  id         String @id @default(cuid())
  nome       String
  academiaId String

  agenda   Agendas[]
  academia Academias @relation(fields: [academiaId], references: [id])
}
